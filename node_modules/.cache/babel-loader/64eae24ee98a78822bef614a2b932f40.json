{"ast":null,"code":"import React, { useState } from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar/Navbar';\nimport Header from './components/Header/Header';\nimport LoginForm from './components/LoginForm/LoginForm';\nimport Values from './Values';\nimport RegistrationForm from './components/RegistrationForm/RegistrationForm';\nimport Home from './components/Home/Home';\nimport PrivateRoute from './utils/PrivateRoute';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport AlertComponent from './components/AlertComponent/AlertComponent'; // class App extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = { token: \"\", username: \"\", password: \"\", values: [], error: \"\" };\n//   }\n//   onLogin = () => {\n//     fetch(\"http://localhost:8080/login\", {\n//     headers: { 'Accept': 'application/json', 'Content-Type': 'application/json' },\n//     method: \"POST\",\n//     body: JSON.stringify({ username: this.state.username, password: this.state.password })\n//     })\n//     .then(res => res.headers.get(\"authorization\"))\n//     .then(token => {\n//       if (token) {\n//         this.setState({ ...this.state, token: token });\n//       } else {\n//         this.setState({ ...this.state, error: \"Unable to login with username and password.\" });\n//       }\n//     });\n//   }\n//   onUsernameChange = (e) => this.setState({ ...this.state, username: e.target.value });\n//    onPasswordChange = (e) => this.setState({ ...this.state, password: e.target.value });\n//    onGetValues = () => {\n//      fetch(\"http://localhost:8080/api/values\", {\n//        headers: { 'Authorization': this.state.token }\n//      })\n//      .then(res => res.json())\n//      .then(json => this.setState({ ...this.state, values: json }));\n//    }\n//    render() {\n//      return (\n//      <div className=\"App\">\n//        <header className=\"App-header\">\n//        {(!this.state.token || this.state.token === \"\")\n//          ? (<Login onUsernameChange={this.onUsernameChange}\n//          onPasswordChange={this.onPasswordChange}\n//          onLogin={this.onLogin}\n//          error={this.state.error}></Login>)\n//          : (<Values values={this.state.values} onGetValues={this.onGetValues}></Values>)}\n//        </header>\n//      </div>\n//      );\n//    }\n//  }\n// function App() {\n//   const [title, updateTitle] = useState(null);\n//   const [errorMessage, updateErrorMessage] = useState(null);\n//   return (\n//     <Router>\n//       <div className=\"App\">\n//         <Header title={title} />\n//         <Navbar />\n//         <div className=\"container d-flex align-items-center flex-column\">\n//           <Switch>\n//             <Route path=\"/\" exact={true}>\n//               <RegistrationForm showError={updateErrorMessage} updateTitle={updateTitle} />\n//             </Route>\n//             <Route path=\"/register\">\n//               <RegistrationForm showError={updateErrorMessage} updateTitle={updateTitle} />\n//             </Route>\n//             <Route path=\"/login\">\n//               <LoginForm showError={updateErrorMessage} updateTitle={updateTitle} />\n//             </Route>\n//             <PrivateRoute path=\"/home\">\n//               <Home />\n//             </PrivateRoute>\n//           </Switch>\n//           <AlertComponent errorMessage={errorMessage} hideError={updateErrorMessage} />\n//         </div>\n//       </div>\n//     </Router>\n//   );\n// }\n\nexport default App;","map":{"version":3,"sources":["/Volumes/Mazinger/loginforms/src/App.js"],"names":["React","useState","Navbar","Header","LoginForm","Values","RegistrationForm","Home","PrivateRoute","BrowserRouter","Router","Switch","Route","AlertComponent","App"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,SAAP,MAAsB,kCAAtB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,gBAAP,MAA6B,gDAA7B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,YAAP,MAAyB,sBAAzB;AACA,SAAQC,aAAa,IAAIC,MAAzB,EAAgCC,MAAhC,EAAuCC,KAAvC,QAAmD,kBAAnD;AACA,OAAOC,cAAP,MAA2B,4CAA3B,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeC,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar/Navbar';\nimport Header from './components/Header/Header';\nimport LoginForm from './components/LoginForm/LoginForm';\nimport Values from './Values';\nimport RegistrationForm from './components/RegistrationForm/RegistrationForm';\nimport Home from './components/Home/Home';\nimport PrivateRoute from './utils/PrivateRoute';\nimport {BrowserRouter as Router,Switch,Route} from \"react-router-dom\";\nimport AlertComponent from './components/AlertComponent/AlertComponent';\n\n// class App extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = { token: \"\", username: \"\", password: \"\", values: [], error: \"\" };\n//   }\n//   onLogin = () => {\n//     fetch(\"http://localhost:8080/login\", {\n//     headers: { 'Accept': 'application/json', 'Content-Type': 'application/json' },\n//     method: \"POST\",\n//     body: JSON.stringify({ username: this.state.username, password: this.state.password })\n//     })\n//     .then(res => res.headers.get(\"authorization\"))\n//     .then(token => {\n//       if (token) {\n//         this.setState({ ...this.state, token: token });\n//       } else {\n//         this.setState({ ...this.state, error: \"Unable to login with username and password.\" });\n//       }\n//     });\n//   }\n//   onUsernameChange = (e) => this.setState({ ...this.state, username: e.target.value });\n//    onPasswordChange = (e) => this.setState({ ...this.state, password: e.target.value });\n\n//    onGetValues = () => {\n//      fetch(\"http://localhost:8080/api/values\", {\n//        headers: { 'Authorization': this.state.token }\n//      })\n//      .then(res => res.json())\n//      .then(json => this.setState({ ...this.state, values: json }));\n//    }\n\n//    render() {\n//      return (\n//      <div className=\"App\">\n//        <header className=\"App-header\">\n//        {(!this.state.token || this.state.token === \"\")\n//          ? (<Login onUsernameChange={this.onUsernameChange}\n//          onPasswordChange={this.onPasswordChange}\n//          onLogin={this.onLogin}\n//          error={this.state.error}></Login>)\n//          : (<Values values={this.state.values} onGetValues={this.onGetValues}></Values>)}\n//        </header>\n//      </div>\n//      );\n//    }\n//  }\n\n// function App() {\n//   const [title, updateTitle] = useState(null);\n//   const [errorMessage, updateErrorMessage] = useState(null);\n//   return (\n//     <Router>\n//       <div className=\"App\">\n//         <Header title={title} />\n//         <Navbar />\n//         <div className=\"container d-flex align-items-center flex-column\">\n//           <Switch>\n//             <Route path=\"/\" exact={true}>\n//               <RegistrationForm showError={updateErrorMessage} updateTitle={updateTitle} />\n//             </Route>\n//             <Route path=\"/register\">\n//               <RegistrationForm showError={updateErrorMessage} updateTitle={updateTitle} />\n//             </Route>\n//             <Route path=\"/login\">\n//               <LoginForm showError={updateErrorMessage} updateTitle={updateTitle} />\n//             </Route>\n//             <PrivateRoute path=\"/home\">\n//               <Home />\n//             </PrivateRoute>\n//           </Switch>\n//           <AlertComponent errorMessage={errorMessage} hideError={updateErrorMessage} />\n//         </div>\n//       </div>\n//     </Router>\n//   );\n// }\n\nexport default App;"]},"metadata":{},"sourceType":"module"}