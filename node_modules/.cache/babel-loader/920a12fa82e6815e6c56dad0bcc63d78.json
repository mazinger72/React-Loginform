{"ast":null,"code":"import React, { useState } from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar/Navbar';\nimport Header from './components/Header/Header';\nimport LoginForm from './components/LoginForm/LoginForm';\nimport RegistrationForm from './components/RegistrationForm/RegistrationForm';\nimport Home from './components/Home/Home';\nimport PrivateRoute from './utils/PrivateRoute';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport AlertComponent from './components/AlertComponent/AlertComponent';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onLogin = () => {\n      fetch(\"http://localhost:3000/login\", {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        method: \"POST\",\n        body: JSON.stringify({\n          username: this.state.username,\n          password: this.state.password\n        })\n      }).then(res => res.headers.get(\"authorization\")).then(token => {\n        if (token) {\n          this.setState({ ...this.state,\n            token: token\n          });\n        } else {\n          this.setState({ ...this.state,\n            error: \"Unable to login with username and password.\"\n          });\n        }\n      });\n    };\n\n    this.onUsernameChange = e => this.setState({ ...this.state,\n      username: e.target.value\n    });\n\n    this.onPasswordChange = e => this.setState({ ...this.state,\n      password: e.target.value\n    });\n\n    this.state = {\n      token: \"\",\n      username: \"\",\n      password: \"\",\n      values: [],\n      error: \"\"\n    };\n  }\n\n} // function App() {\n//   const [title, updateTitle] = useState(null);\n//   const [errorMessage, updateErrorMessage] = useState(null);\n//   return (\n//     <Router>\n//       <div className=\"App\">\n//         <Header title={title} />\n//         <Navbar />\n//         <div className=\"container d-flex align-items-center flex-column\">\n//           <Switch>\n//             <Route path=\"/\" exact={true}>\n//               <RegistrationForm showError={updateErrorMessage} updateTitle={updateTitle} />\n//             </Route>\n//             <Route path=\"/register\">\n//               <RegistrationForm showError={updateErrorMessage} updateTitle={updateTitle} />\n//             </Route>\n//             <Route path=\"/login\">\n//               <LoginForm showError={updateErrorMessage} updateTitle={updateTitle} />\n//             </Route>\n//             <PrivateRoute path=\"/home\">\n//               <Home />\n//             </PrivateRoute>\n//           </Switch>\n//           <AlertComponent errorMessage={errorMessage} hideError={updateErrorMessage} />\n//         </div>\n//       </div>\n//     </Router>\n//   );\n// }\n\n\nexport default App;","map":{"version":3,"sources":["/Volumes/Mazinger/loginforms/src/App.js"],"names":["React","useState","Navbar","Header","LoginForm","RegistrationForm","Home","PrivateRoute","BrowserRouter","Router","Switch","Route","AlertComponent","App","Component","constructor","props","onLogin","fetch","headers","method","body","JSON","stringify","username","state","password","then","res","get","token","setState","error","onUsernameChange","e","target","value","onPasswordChange","values"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,SAAP,MAAsB,kCAAtB;AACA,OAAOC,gBAAP,MAA6B,gDAA7B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,YAAP,MAAyB,sBAAzB;AACA,SAAQC,aAAa,IAAIC,MAAzB,EAAgCC,MAAhC,EAAuCC,KAAvC,QAAmD,kBAAnD;AACA,OAAOC,cAAP,MAA2B,4CAA3B;;AAEA,MAAMC,GAAN,SAAkBC,SAAlB,CAA4B;AAC1BC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAKnBC,OALmB,GAKT,MAAM;AACdC,MAAAA,KAAK,CAAC,6BAAD,EAAgC;AACrCC,QAAAA,OAAO,EAAE;AAAE,oBAAU,kBAAZ;AAAgC,0BAAgB;AAAhD,SAD4B;AAErCC,QAAAA,MAAM,EAAE,MAF6B;AAGrCC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEC,UAAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWD,QAAvB;AAAiCE,UAAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWC;AAAtD,SAAf;AAH+B,OAAhC,CAAL,CAKCC,IALD,CAKMC,GAAG,IAAIA,GAAG,CAACT,OAAJ,CAAYU,GAAZ,CAAgB,eAAhB,CALb,EAMCF,IAND,CAMMG,KAAK,IAAI;AACb,YAAIA,KAAJ,EAAW;AACT,eAAKC,QAAL,CAAc,EAAE,GAAG,KAAKN,KAAV;AAAiBK,YAAAA,KAAK,EAAEA;AAAxB,WAAd;AACD,SAFD,MAEO;AACL,eAAKC,QAAL,CAAc,EAAE,GAAG,KAAKN,KAAV;AAAiBO,YAAAA,KAAK,EAAE;AAAxB,WAAd;AACD;AACF,OAZD;AAaD,KAnBkB;;AAAA,SAqBnBC,gBArBmB,GAqBCC,CAAD,IAAO,KAAKH,QAAL,CAAc,EAAE,GAAG,KAAKN,KAAV;AAAiBD,MAAAA,QAAQ,EAAEU,CAAC,CAACC,MAAF,CAASC;AAApC,KAAd,CArBP;;AAAA,SAsBnBC,gBAtBmB,GAsBCH,CAAD,IAAO,KAAKH,QAAL,CAAc,EAAE,GAAG,KAAKN,KAAV;AAAiBC,MAAAA,QAAQ,EAAEQ,CAAC,CAACC,MAAF,CAASC;AAApC,KAAd,CAtBP;;AAEjB,SAAKX,KAAL,GAAa;AAAEK,MAAAA,KAAK,EAAE,EAAT;AAAaN,MAAAA,QAAQ,EAAE,EAAvB;AAA2BE,MAAAA,QAAQ,EAAE,EAArC;AAAyCY,MAAAA,MAAM,EAAE,EAAjD;AAAqDN,MAAAA,KAAK,EAAE;AAA5D,KAAb;AACD;;AAJyB,C,CA2B5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAenB,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar/Navbar';\nimport Header from './components/Header/Header';\nimport LoginForm from './components/LoginForm/LoginForm';\nimport RegistrationForm from './components/RegistrationForm/RegistrationForm';\nimport Home from './components/Home/Home';\nimport PrivateRoute from './utils/PrivateRoute';\nimport {BrowserRouter as Router,Switch,Route} from \"react-router-dom\";\nimport AlertComponent from './components/AlertComponent/AlertComponent';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { token: \"\", username: \"\", password: \"\", values: [], error: \"\" };\n  }\n\n  onLogin = () => {\n    fetch(\"http://localhost:3000/login\", {\n    headers: { 'Accept': 'application/json', 'Content-Type': 'application/json' },\n    method: \"POST\",\n    body: JSON.stringify({ username: this.state.username, password: this.state.password })\n    })\n    .then(res => res.headers.get(\"authorization\"))\n    .then(token => {\n      if (token) {\n        this.setState({ ...this.state, token: token });\n      } else {\n        this.setState({ ...this.state, error: \"Unable to login with username and password.\" });\n      }\n    });\n  }\n\n  onUsernameChange = (e) => this.setState({ ...this.state, username: e.target.value });\n  onPasswordChange = (e) => this.setState({ ...this.state, password: e.target.value });\n\n  \n}\n// function App() {\n//   const [title, updateTitle] = useState(null);\n//   const [errorMessage, updateErrorMessage] = useState(null);\n//   return (\n//     <Router>\n//       <div className=\"App\">\n//         <Header title={title} />\n//         <Navbar />\n//         <div className=\"container d-flex align-items-center flex-column\">\n//           <Switch>\n//             <Route path=\"/\" exact={true}>\n//               <RegistrationForm showError={updateErrorMessage} updateTitle={updateTitle} />\n//             </Route>\n//             <Route path=\"/register\">\n//               <RegistrationForm showError={updateErrorMessage} updateTitle={updateTitle} />\n//             </Route>\n//             <Route path=\"/login\">\n//               <LoginForm showError={updateErrorMessage} updateTitle={updateTitle} />\n//             </Route>\n//             <PrivateRoute path=\"/home\">\n//               <Home />\n//             </PrivateRoute>\n//           </Switch>\n//           <AlertComponent errorMessage={errorMessage} hideError={updateErrorMessage} />\n//         </div>\n//       </div>\n//     </Router>\n//   );\n// }\n\nexport default App;"]},"metadata":{},"sourceType":"module"}